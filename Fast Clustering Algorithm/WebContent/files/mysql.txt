                                             MySQL



From Wikipedia, the free encyclopedia
Jump to: navigation, search
MySQL MySQL.svg
Developer(s) 	Oracle (formerly Sun, formerly MySQL AB)
Initial release 	23 May 1995
Stable release 	5.6.10 / 5 February 2013; 51 days ago[1]
Preview release 	5.6.9 / 11 December 2012; 3 months ago[2]
Written in 	C, C++[3]
Operating system 	Cross-platform
Available in 	English
Type 	RDBMS
License 	GNU General Public License (version 2) or proprietary EULA
Website 	www.mysql.com
dev.mysql.com

MySQL (pron.: /ma? ??skju?'?l/ "My S-Q-L",[4] officially, but also called /ma? 'si?kw?l/ "My Sequel") is (as of 2008) the world's most widely used[5][6] open source relational database management system (RDBMS)[7] that runs as a server providing multi-user access to a number of databases. It is named after co-founder Michael Widenius' daughter, My.[8] The SQL phrase stands for Structured Query Language.[4]

The MySQL development project has made its source code available under the terms of the GNU General Public License, as well as under a variety of proprietary agreements. MySQL was owned and sponsored by a single for-profit firm, the Swedish company MySQL AB, now owned by Oracle Corporation.[9]

MySQL is a popular choice of database for use in web applications, and is a central component of the widely used LAMP open source web application software stack (and other 'AMP' stacks). LAMP is an acronym for "Linux, Apache, MySQL, Perl/PHP/Python." Free-software-open source projects that require a full-featured database management system often use MySQL.

For commercial use, several paid editions are available, and offer additional functionality. Applications which use MySQL databases include: TYPO3, Joomla, WordPress, phpBB, MyBB, Drupal and other software. MySQL is also used in many high-profile, large-scale World Wide Web products, including Wikipedia,[10] Google[11][12] (though not for searches), Facebook,[13][14][15] Twitter,[16] Flickr,[17] Nokia.com,[18] and YouTube.[19]
Contents

    1 Interfaces
        1.1 Graphical
        1.2 Command line
        1.3 Programming
    2 Features
        2.1 Limitations
        2.2 Deployment
        2.3 Cloud deployment
    3 Community
        3.1 Related projects
    4 History
        4.1 Legal and acquisition impacts
        4.2 Milestones
        4.3 Versions
    5 See also
    6 References
    7 External links

Interfaces
MySQL Workbench in Windows

MySQL is a relational database management system (RDBMS), and ships with no GUI tools to administer MySQL databases or manage data contained within the databases. Users may use the included command line tools,[20][21] or use MySQL "front-ends", desktop software and web applications that create and manage MySQL databases, build database structures, back up data, inspect status, and work with data records.[22][23][24][25] The official set of MySQL front-end tools, MySQL Workbench is actively developed by Oracle, and is freely available for use.[26]
Graphical

The official MySQL Workbench is a free integrated environment developed by MySQL AB, that enables users to graphically administer MySQL databases and visually design database structures. MySQL Workbench replaces the previous package of software, MySQL GUI Tools. Similar to other third-party packages, but still considered the authoritative MySQL front end, MySQL Workbench lets users manage database design & modeling, SQL development (replacing MySQL Query Browser) and Database administration (replacing MySQL Administrator).

MySQL Workbench is available in two editions, the regular free and open source Community Edition which may be downloaded from the MySQL website, and the proprietary Standard Edition which extends and improves the feature set of the Community Edition.

Third-party proprietary and free graphical administration applications (or "front ends") are available that integrate with MySQL and enable users to work with database structure and data visually. Some well-known front ends, in alphabetical order, are:

    Adminer – a free MySQL front end written in one PHP script, capable of managing multiple databases, with many CSS skins available.
    DaDaBIK – a customizable CRUD front-end to MySQL. Written in PHP. Commercial.
    DBEdit – a free front end for MySQL and other databases.
    dbForge GUI Tools — a set of tools for database management that includes separate applications for schema comparison and synchronization, data comparison and synchronization, and building queries.
    HeidiSQL – a full featured free front end that runs on Windows, and can connect to local or remote MySQL servers to manage databases, tables, column structure, and individual data records. Also supports specialised GUI features for date/time fields and enumerated multiple-value fields.[27]
    LibreOffice Base - LibreOffice Base allows the creation and management of databases, preparation of forms and reports that provide end users easy access to data. Like Microsoft Access, it can be used as a front-end for various database systems, including Access databases (JET), ODBC data sources, and MySQL or PostgreSQL.[28]
    Navicat – a series of proprietary graphical database management applications, developed for Windows, Macintosh and Linux.
    OpenOffice.org – OpenOffice.org Base can manage MySQL databases if the entire suite is installed. Free and open-source.
    phpMyAdmin – a free Web-based front end widely installed[citation needed] by web hosts, since it is developed in PHP and is included in the LAMP stack, MAMP, XAMPP and WAMP software bundle installers.
    SQLBuddy - a free Web-based front end, developed in PHP.
    Sequel Pro - a free, open-source front end for Mac OS X.
    SQLYog - a free community-developed UI for MySQL.
    Toad for MySQL – a free development and administration front end for MySQL from Quest Software

Other available proprietary MySQL front ends include dbForge Studio for MySQL, DBStudio, Epictetus, Microsoft Access, Oracle SQL Developer, SchemaBank, SQLPro SQL Client, Toad Data Modeler.
Command line

MySQL ships with many command line tools, from which the main interface is 'mysql' client.[20][21] Third-parties have also developed tools to manage, optimize, monitor and backup a MySQL server, some listed below. All these tools work on *NIX type operating systems, and some of them also on Windows.

    Maatkit - a cross-platform toolkit for MySQL, PostgreSQL and Memcached, developed in Perl.[29] Maatkit can be used to prove replication is working correctly, fix corrupted data, automate repetitive tasks, and speed up servers. Maatkit is included with several GNU/Linux distributions such as CentOS and Debian and packages are available for Fedora and Ubuntu as well. As of late 2011, Maatkit is no longer developed, but Percona has continued development under the Percona Toolkit brand.[30]

    XtraBackup - Open Source MySQL hot backup software. Some notable features include hot, non-locking backups for InnoDB storage, incremental backups, streaming, parallel-compressed backups, throttling based on the number of IO operations per second, etc.[31]

    MySQL::Replication - a replacement for MySQL's built-in replication, developed in Perl.[32] MySQL::Replication can be used to create a peer-to-peer, multi-master MySQL replication network.

Programming

MySQL works on many different system platforms, including AIX, BSDi, FreeBSD, HP-UX, eComStation, i5/OS, IRIX, Linux, Mac OS X, Microsoft Windows, NetBSD, Novell NetWare, OpenBSD, OpenSolaris, OS/2 Warp, QNX, Solaris, Symbian, SunOS, SCO OpenServer, SCO UnixWare, Sanos and Tru64. A port of MySQL to OpenVMS also exists.[33]

MySQL is written in C and C++. Its SQL parser is written in yacc, and a home-brewed lexical analyzer.[34] Many programming languages with language-specific APIs include libraries for accessing MySQL databases. These include MySQL Connector/Net for integration with Microsoft's Visual Studio (languages such as C# and VB are most commonly used) and the JDBC driver for Java. In addition, an ODBC interface called MyODBC allows additional programming languages that support the ODBC interface to communicate with a MySQL database, such as ASP or ColdFusion. The HTSQL - URL-based query method also ships with a MySQL adapter, allowing direct interaction between a MySQL database and any web client via structured URLs.
Features

As of April 2009, MySQL offered MySQL 5.1 in two different variants: the open source MySQL Community Server and the commercial Enterprise Server. MySQL 5.5 is offered under the same licences.[35] They have a common code base and include the following features:

    A broad subset of ANSI SQL 99, as well as extensions
    Cross-platform support
    Stored procedures
    Triggers
    Cursors
    Updatable Views
    Information schema
    Strict mode (ensures MySQL does not truncate or otherwise modify data to conform to an underlying data type, when an incompatible value is inserted into that type)
    X/Open XA distributed transaction processing (DTP) support; two phase commit as part of this, using Oracle's InnoDB engine
    Independent storage engines (MyISAM for read speed, InnoDB for transactions and referential integrity, MySQL Archive for storing historical data in little space)
    Transactions with the InnoDB, and Cluster storage engines; savepoints with InnoDB
    SSL support
    Query caching
    Sub-SELECTs (i.e. nested SELECTs)
    Replication support (i.e. Master-Master Replication & Master-Slave Replication) with one master per slave, many slaves per master, no automatic support for multiple masters per slave.
    Full-text indexing and searching using MyISAM engine
    Embedded database library
    Unicode support (however prior to 5.5.3 UTF-8 and UCS-2 encoded strings are limited to the BMP, in 5.5.3 and later use utf8mb4 for full unicode support)
    ACID compliance when using transaction capable storage engines (InnoDB and Cluster)[36]
    Partitioned tables with pruning of partitions in optimizer
    Shared-nothing clustering through MySQL Cluster
    Hot backup (via mysqlhotcopy) under certain conditions[37]
    Multiple storage engines, allowing one to choose the one that is most effective for each table in the application (in MySQL 5.0, storage engines must be compiled in; in MySQL 5.1, storage engines can be dynamically loaded at run time):
        Native storage engines (MyISAM, Falcon, Merge, Memory (heap), Federated, Archive, CSV, Blackhole, Cluster, EXAMPLE, Aria, and InnoDB, which was made the default as of 5.5)
        Partner-developed storage engines (solidDB, NitroEDB, ScaleDB, TokuDB, Infobright (formerly Brighthouse), Kickfire, XtraDB, IBM DB2).[38] InnoDB used to be a partner-developed storage engine, but with recent acquisitions, Oracle now owns both MySQL core and InnoDB.
        Community-developed storage engines (memcache engine, httpd, PBXT, Revision Engine)
        Custom storage engines
    Commit grouping, gathering multiple transactions from multiple connections together to increase the number of commits per second. (PostgreSQL has an advanced form of this functionality[39])

The developers release monthly versions of the MySQL Server. The sources can be obtained from MySQL's website or from MySQL's Bazaar repository, both under the GPL license.
Limitations

Like other SQL databases, MySQL does not currently comply with the full SQL standard for some of the implemented functionality, including foreign key references when using some storage engines other than the 'standard' InnoDB.[40]

Triggers are currently limited to one per action / timing, i.e. maximum one after insert and one before insert on the same table.[41] There are no triggers on views.[41]

MySQL, like most other transactional relational databases, is strongly limited by hard disk performance. This is especially true in terms of write latency.[42] Given the recent appearance of very affordable consumer grade SATA interface Solid-state drives that offer zero mechanical latency, a fivefold speedup over even an eight drive RAID array can be had for a smaller investment.[43][44]
Deployment

MySQL can be built and installed manually from source code, but this can be tedious so it is more commonly installed from a binary package unless special customizations are required. On most Linux distributions the package management system can download and install MySQL with minimal effort, though further configuration is often required to adjust security and optimization settings.

Though MySQL began as a low-end alternative to more powerful proprietary databases, it has gradually evolved to support higher-scale needs as well. It is still most commonly used in small to medium scale single-server deployments, either as a component in a LAMP-based web application or as a standalone database server. Much of MySQL's appeal originates in its relative simplicity and ease of use, which is enabled by an ecosystem of open source tools such as phpMyAdmin. In the medium range, MySQL can be scaled by deploying it on more powerful hardware, such as a multi-processor server with gigabytes of memory.

There are however limits to how far performance can scale on a single server, so on larger scales, multi-server MySQL deployments are required to provide improved performance and reliability. A typical high-end configuration can include a powerful master database which handles data write operations and is replicated to multiple slaves that handle all read operations.[45] The master server synchronizes continually with its slaves so in the event of failure a slave can be promoted to become the new master, minimizing downtime. Further improvements in performance can be achieved by caching the results from database queries in memory using memcached, or breaking down a database into smaller chunks called shards which can be spread across a number of distributed server clusters.[46]
Cloud deployment
Main article: Cloud database

MySQL can also be run on cloud computing platforms such as Amazon EC2. Listed below are some common deployment models for MySQL on the cloud:

    Virtual Machine Image - cloud users can upload a machine image of their own with MySQL installed, or use a ready-made machine image with an optimized installation of MySQL on it, such as the one provided by Amazon EC2.[47]
    MySQL as a Service - some cloud platforms offer MySQL "as a service". In this configuration, application owners do not have to install and maintain the MySQL database on their own. Instead, the database service provider takes responsibility for installing and maintaining the database, and application owners pay according to their usage.[48] Notable cloud-based MySQL services are the Amazon Relational Database Service; the Xeround Cloud Database, which runs on EC2; Rackspace; HP Cloud Services; and Heroku.
    Managed MySQL cloud hosting - the database is not offered as a service, but the cloud provider hosts the database and manages it on the application owner's behalf. As of 2011, of the major cloud providers, only Terremark and Rackspace offer managed hosting for MySQL databases.[49][50]

Community

The MySQL server software itself and the client libraries use dual-licensing distribution. They are offered under GPL version 2,[51] beginning from 28 June 2000[52] (which in 2009 has been extended with a FLOSS License Exception)[53] or to use a proprietary license.[54]

Support can be obtained from the official manual.[55] Free support additionally is available in different IRC channels and forums. Oracle offers paid support via its MySQL Enterprise products. They differ in the scope of services and in price. Additionally, a number of third party organisations exist to provide support and services, including SkySQL Ab and Percona.

MySQL has received positive reviews, and reviewers noticed it "performs extremely well in the average case." and that the "developer interfaces are there, and the documentation (not to mention feedback in the real world via Web sites and the like) is very, very good".[56] It has also been tested to be a "fast, stable and true multi-user, multi-threaded sql database server".[57]
Related projects

    Drizzle – a fork targeted at the web-infrastructure and cloud computing markets. The developers of the product describe it as a "smaller, slimmer and (hopefully) faster version of MySQL". As such is planned to have many common MySQL features stripped out, including stored procedures, query cache, prepared statements, views, and triggers. This is a partial rewrite of the server that does not maintain compatibility with MySQL.
    MariaDB – a community-developed branch of the MySQL database, the impetus being the community maintenance of its free status under GPL as opposed to any uncertainty of MySQL license status under its current ownership by Oracle. The intent also being to maintain high fidelity with MySQL, ensuring a "drop-in" replacement capability with library binary equivalency and exact matching with MySQL APIs and commands. It includes the XtraDB storage engine as a replacement for InnoDB.
    Percona Server – a fork that includes the XtraDB storage engine. It is an enhanced version of MySQL that is fully compatible, and deviates as little as possible from it, while still providing beneficial new features, better performance, and improved instrumentation for analysis of performance and usage.
    OurDelta – No longer maintained. It was a fork compiled with various patches, including patches from MariaDB, Percona, and Google, and a storage engine called OQGRAPH.

History
Legal and acquisition impacts

On 15 June 2001, NuSphere sued MySQL AB, TcX DataKonsult AB and its original authors Michael ("Monty") Widenius and David Axmark in U.S District Court in Boston for “breach of contract, tortious interference with third party contracts and relationships and unfair competition”.[58] [59]

In 2002, MySQL AB sued Progress NuSphere for copyright and trademark infringement in United States district court. NuSphere had allegedly violated MySQL's copyright by linking MySQL's GPL'ed code with NuSphere Gemini table without being in compliance with the license.[60] After a preliminary hearing before Judge Patti Saris on 27 February 2002, the parties entered settlement talks and eventually settled.[61] After the hearing, FSF commented that "Judge Saris made clear that she sees the GNU GPL to be an enforceable and binding license."[62]

In October 2005, Oracle Corporation acquired Innobase OY, the Finnish company that developed the third-party InnoDB storage engine that allows MySQL to provide such functionality as transactions and foreign keys. After the acquisition, an Oracle press release mentioned that the contracts that make the company's software available to MySQL AB would be due for renewal (and presumably renegotiation) some time in 2006.[63] During the MySQL Users Conference in April 2006, MySQL issued a press release that confirmed that MySQL and Innobase OY agreed to a "multi-year" extension of their licensing agreement.[64]

In February 2006, Oracle Corporation acquired Sleepycat Software,[65] makers of the Berkeley DB, a database engine providing the basis for another MySQL storage engine. This had little effect, as Berkeley DB was not widely used, and was dropped (due to lack of use) in MySQL 5.1.12, a pre-GA release of MySQL 5.1 released in October 2006.[66]

In January 2008, Sun Microsystems bought MySQL for $1 billion.[67]

In April 2009, Oracle Corporation entered into an agreement to purchase Sun Microsystems,[68] then owners of MySQL copyright and trademark. Sun's board of directors unanimously approved the deal, it was also approved by Sun's shareholders, and by the U.S. government on 20 August 2009.[69] On 14 December 2009, Oracle pledged to continue to enhance MySQL[70] as it had done for the previous four years.

A movement against Oracle's acquisition of MySQL, to "Save MySQL"[71] from Oracle was started by one of the MySQL founders, Monty Widenius. The petition of 50,000+ developers and users called upon the European Commission to block approval of the acquisition. At the same time, several Free Software opinion leaders (including Eben Moglen, Pamela Jones of Groklaw, Jan Wildeboer and Carlo Piana, who also acted as co-counsel in the merger regulation procedure) advocated for the unconditional approval of the merger.[citation needed] As part of the negotiations with the European Commission, Oracle committed that MySQL server will continue until at least 2015 to use the dual-licensing strategy long used by MySQL AB, with commercial and GPL versions available. The antitrust of the EU had been "pressuring it to divest MySQL as a condition for approval of the merger". But, as revealed by Wikileaks, the US Department of Justice and Antitrust, at the request of Oracle, pressured the EU to unconditionally approve the merger.[72] The European Commission eventually unconditionally approved Oracle's acquisition of MySQL on 21 January 2010.[73]

In January 2009, prior to Oracle's acquisition of MySQL, Monty Widenius started a GPL-only fork, MariaDB. MariaDB is based on the same code base as MySQL server 5.1 and strives to maintain compatibility with Oracle-provided versions.[74]

In August 2012, TechCrunch's Alex Williams reported that Oracle was holding back MySQL Server test cases, a move that he concluded indicated that Oracle is attempting to kill the product.[75] Percona also reported that Oracle is no longer synchronizing their changes with the public source repositories.[76] Widenius called this a breach of the agreement that Oracle entered into with the EU as a condition of their acquisition of Sun.[77]
Milestones

Notable milestones in MySQL development include:

    Original development of MySQL by Michael Widenius and David Axmark beginning in 1994[78]
    First internal release on 23 May 1995
    Version 3.19: End of 1996, from www.tcx.se
    Version 3.20: January 1997
    Windows version was released on 8 January 1998 for Windows 95 and NT
    Version 3.21: production release 1998, from www.mysql.com
    Version 3.22: alpha, beta from 1998
    Version 3.23: beta from June 2000, production release 22 January 2001[79]
    Version 4.0: beta from August 2002, production release March 2003 (unions)
    Version 4.01: beta from August 2003, Jyoti[clarification needed][citation needed] adopts MySQL for database tracking
    Version 4.1: beta from June 2004, production release October 2004 (R-trees and B-trees, subqueries, prepared statements)
    Version 5.0: beta from March 2005, production release October 2005 (cursors, stored procedures, triggers, views, XA transactions)

    The developer of the Federated Storage Engine states that "The Federated Storage Engine is a proof-of-concept storage engine",[80] but the main distributions of MySQL version 5.0 included it and turned it on by default. Documentation of some of the short-comings appears in "MySQL Federated Tables: The Missing Manual".[81]

    Sun Microsystems acquired MySQL AB in 2008.[82]
    Version 5.1: production release 27 November 2008 (event scheduler, partitioning, plugin API, row-based replication, server log tables)

    Version 5.1 contained 20 known crashing and wrong result bugs in addition to the 35 present in version 5.0 (almost all fixed as of release 5.1.51).[83]
    MySQL 5.1 and 6.0 showed poor performance when used for data warehousing — partly due to its inability to utilize multiple CPU cores for processing a single query.[84]

    Oracle acquired Sun Microsystems on 27 January 2010.[85]
    MySQL Server 5.5 is currently generally available (as of December 2010). Enhancements and features include:
        The default storage engine is InnoDB, which supports transactions and referential integrity constraints.
        Improved InnoDB I/O subsystem[86]
        Improved SMP support[87]
        Semisynchronous replication.
        SIGNAL and RESIGNAL statement in compliance with the SQL standard.
        Support for supplementary Unicode character sets utf16, utf32, and utf8mb4.
        New options for user-defined partitioning.

MySQL Server 6.0.11-alpha was announced[88] on 22 May 2009 as the last release of the 6.0 line. Future MySQL Server development uses a New Release Model. Features developed for 6.0 are being incorporated into future releases.

MySQL 5.6, a development milestone release, was announced at the MySQL users conference 2011. New features include performance improvements to the query optimizer, higher transactional throughput in InnoDB, new NoSQL-style memcached APIs, improvements to partitioning for querying and managing very large tables, improvements to replication and better performance monitoring by expanding the data available through the PERFORMANCE_SCHEMA.[89] In July further previews with a BINLOG API, group commit, and InnoDB full text searching were released.